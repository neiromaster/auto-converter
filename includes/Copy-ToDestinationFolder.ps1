. .\includes\Write-Log.ps1

function Copy-ToDestinationFolder {
    param (
        [Parameter(Mandatory=$true)]
        [string]$FilePath,

        [Parameter(Mandatory=$true)]
        [string]$DestinationRoot
    )

    $FileName = [System.IO.Path]::GetFileName($FilePath)
    $BaseName = [System.IO.Path]::GetFileNameWithoutExtension($FileName)

    Write-Log "üîç –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è: $FileName" -Pale

    $normalizedBaseName = $BaseName.Replace('.', ' ').Replace('_', ' ').ToLower()

    $foundDestinationFolder = $null
    $destinationFolders = Get-ChildItem -Path $DestinationRoot -Directory | Select-Object -ExpandProperty Name

    foreach ($folderName in $destinationFolders) {
        $normalizedFolderName = $folderName.Replace('.', ' ').Replace('_', ' ').ToLower()

        if ($normalizedBaseName -like "*$normalizedFolderName*") {
            $foundDestinationFolder = Join-Path $DestinationRoot $folderName
            break
        }
    }

    if (-not $foundDestinationFolder) {
        Write-Log "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞: $FileName" -Pale
        return
    }

    Write-Log "‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: $foundDestinationFolder" -Pale

    try {
        $targetPath = Join-Path $foundDestinationFolder $FileName
        Copy-Item -LiteralPath $FilePath -Destination $targetPath -Force -ErrorAction Stop -ProgressAction Continue
        Write-Log "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª: $FileName –≤ $foundDestinationFolder"
    }
    catch {
        Write-Log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞(–æ–≤) –≤ ${foundDestinationFolder}: $($_.Exception.Message)"
    }
}