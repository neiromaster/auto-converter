. .\includes\Write-Log.ps1

# === Auto-Update Configuration ===

$GitHubRepoOwner = "neiromaster"
$GitHubRepoName = "auto-converter"

function Check-ForUpdates {
    Write-Log "üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..." -Pale
    $CurrentScriptPath = $MyInvocation.PSCommandPath
    $ApiUrl = "https://api.github.com/repos/$GitHubRepoOwner/$GitHubRepoName/releases/latest"

    try {
        $CurrentScriptHash = (Get-FileHash -Algorithm SHA256 -Path $CurrentScriptPath).Hash
        Write-Log "üîÑ –•—ç—à —Å–∫—Ä–∏–ø—Ç–∞: $CurrentScriptHash" -Pale

        $LatestRelease = Invoke-RestMethod -Uri $ApiUrl -Headers @{ "User-Agent" = "PowerShell-Updater" } -TimeoutSec 10
        $ReleaseBody = $LatestRelease.body
        $LatestReleaseHash = ($ReleaseBody | Select-String -Pattern "SHA256: ([a-fA-F0-9]{64})" | ForEach-Object { $_.Matches[0].Groups[1].Value })

        if (-not $LatestReleaseHash) {
            Write-Log "‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ö–µ—à SHA256 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–ª–∏–∑–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ."
            return
        }

        Write-Log "üîÑ –•—ç—à —Å–∫—Ä–∏–ø—Ç–∞ –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Ä–µ–ª–∏–∑–µ: $LatestReleaseHash" -Pale

        $TempUpdatePath = Join-Path ([System.IO.Path]::GetTempPath()) "auto-converter.ps1.new"

        if ($CurrentScriptHash -ne $LatestReleaseHash) {
            Write-Log "üîÑ –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è. –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
            $DownloadUrl = $LatestRelease.assets | Where-Object { $_.name -eq "auto-converter.ps1" } | Select-Object -ExpandProperty browser_download_url

            if ($DownloadUrl) {
                Invoke-WebRequest -Uri $DownloadUrl -OutFile $TempUpdatePath -TimeoutSec 30

                Write-Log "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ $TempUpdatePath. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." -Pale

                $UpdateScriptContent = @"
param(
    [string]`$CurrentScriptPath,
    [string]`$TempUpdatePath
)

function Write-UpdaterLog {
    param([string]`$Message)
    `$timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    "`$timestamp | UPDATER | `$Message" | Out-File -FilePath (Join-Path ([System.IO.Path]::GetTempPath()) "auto-converter-updater.log") -Append -Encoding UTF8
    Write-Host `$Message
}

Write-UpdaterLog "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."

try {
    Start-Sleep -Seconds 2

    `$OldScriptBackupPath = "`$CurrentScriptPath.old"

    if (Test-Path -LiteralPath `$CurrentScriptPath) {
        Write-UpdaterLog "–ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–∫—Ä–∏–ø—Ç –≤ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: `$OldScriptBackupPath"
        Rename-Item -Path `$CurrentScriptPath -NewName `$OldScriptBackupPath -Force -ErrorAction Stop
    } else {
        Write-UpdaterLog "–¢–µ–∫—É—â–∏–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: `$CurrentScriptPath. –í–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –±—ã–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω –∏–ª–∏ —É–¥–∞–ª–µ–Ω."
    }

    if (Test-Path -LiteralPath `$TempUpdatePath) {
        Write-UpdaterLog "–ü–µ—Ä–µ–º–µ—â–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç: `$TempUpdatePath -> `$CurrentScriptPath"
        Move-Item -Path `$TempUpdatePath -Destination `$CurrentScriptPath -Force -ErrorAction Stop
    } else {
        throw "–í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: `$TempUpdatePath"
    }

    if (Test-Path -LiteralPath `$OldScriptBackupPath) {
        Write-UpdaterLog "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: `$OldScriptBackupPath"
        Remove-Item -Path `$OldScriptBackupPath -Force -ErrorAction SilentlyContinue
    }

    Write-UpdaterLog "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞..."
    Start-Process pwsh.exe -ArgumentList "-NoProfile", "-File", "`"`$CurrentScriptPath`"`" 
    exit 0
}
catch {
    Write-UpdaterLog "–û–®–ò–ë–ö–ê –ü–†–ò–ú–ï–ù–ï–ù–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø: `$_ "
    if (Test-Path -LiteralPath `$OldScriptBackupPath -and -not (Test-Path -LiteralPath `$CurrentScriptPath)) {
        Write-UpdaterLog "–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–∞—Ç–∞: –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏."
        try {
            Rename-Item -Path `$OldScriptBackupPath -NewName `$CurrentScriptPath -Force -ErrorAction Stop
            Write-UpdaterLog "–û—Ç–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω."
        }
        catch {
            Write-UpdaterLog "–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –û–¢–ö–ê–¢–ê: `$_ . –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ."
        }
    }
    exit 1
}
finally {
    if (Test-Path -LiteralPath `$TempUpdatePath) {
        Remove-Item -Path `$TempUpdatePath -Force -ErrorAction SilentlyContinue
    }
}
"@
                $TempUpdaterPath = Join-Path ([System.IO.Path]::GetTempPath()) "auto-converter-updater.ps1"
                $UpdateScriptContent | Out-File $TempUpdaterPath -Encoding UTF8

                Write-Log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." -Pale
                Start-Process pwsh.exe -ArgumentList "-NoProfile", "-File", "`"$TempUpdaterPath`"", "-CurrentScriptPath", "`"$CurrentScriptPath`"", "-TempUpdatePath", "`"$TempUpdatePath`""
                exit
            }
            else {
                Write-Log "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ auto-converter.ps1 –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏."
            }
        }
        else {
            Write-Log "üîÑ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—ë–Ω."
            Remove-Item -Path $TempUpdatePath -ErrorAction SilentlyContinue
        }
    }
    catch {
        Write-Log "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $_"
    }
}
