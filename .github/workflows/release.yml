name: Create GitHub Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PowerShell
        uses: actions/setup-powershell@v1

      - name: Run builder.ps1
        run: pwsh -File builder.ps1

      - name: Get current date and month
        id: date
        run: |
          echo "YEAR=$(date +'%y')" >> $GITHUB_OUTPUT
          echo "MONTH=$(date +'%m')" >> $GITHUB_OUTPUT

      - name: Get latest patch number for current month
        id: get_patch
        uses: actions/github-script@v6
        with:
          script: |
            const { YEAR, MONTH } = process.env;
            const tagPrefix = `v${YEAR}.${MONTH}.`;
            let patch = 0;

            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            for (const release of releases.data) {
              if (release.tag_name.startsWith(tagPrefix)) {
                const currentPatch = parseInt(release.tag_name.split('.').pop());
                if (!isNaN(currentPatch) && currentPatch > patch) {
                  patch = currentPatch;
                }
              }
            }
            patch++;
            const formattedPatch = patch < 10 ? `0${patch}` : `${patch}`;
            console.log(`Calculated patch: ${formattedPatch}`);
            core.setOutput('patch', formattedPatch);
        env:
          YEAR: ${{ steps.date.outputs.YEAR }}
          MONTH: ${{ steps.date.outputs.MONTH }}

      - name: Create Release Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ steps.date.outputs.YEAR }}.${{ steps.date.outputs.MONTH }}.${{ steps.get_patch.outputs.patch }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "Release tag will be: $TAG_NAME"

      - name: Calculate auto-converter.ps1 SHA256
        id: calculate_hash
        run: |
          HASH=$(sha256sum dist/auto-converter.ps1 | awk '{print $1}')
          echo "SCRIPT_SHA256=$HASH" >> $GITHUB_ENV
          echo "Calculated SHA256: $HASH"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: |
            Automated release for version ${{ env.TAG_NAME }}
            SHA256: ${{ env.SCRIPT_SHA256 }}
          files: |
            dist/auto-converter.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
